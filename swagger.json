{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Auth API",
    "description": "API for user,account and product"
  },
  "basePath": "/api/v1",
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "x-tokenName": "Authorization",
      "x-addBearer": true,
      "description": "Enter your bearer token in the format 'Bearer &lt;token&gt;'"
    }
  },
  "paths": {
    "/product/buy/{productId}": {
      "post": {
        "summary": "Route to buy product by buyer",
        "tags": ["Product"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "ID of the product to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product object",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "example": 20
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/product/{productId}": {
      "patch": {
        "summary": "Route to  update product by seller",
        "tags": ["Product"],
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "ID of the product to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product object",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "productName": {
                  "type": "string",
                  "example": "lastName"
                },
                "productId": {
                  "type": "string",
                  "example": "lastName"
                },
                "cost": {
                  "type": "number",
                  "example": 20
                },
                "description": {
                  "type": "string",
                  "example": "seller product"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Route to delete a product by ID",
        "tags": ["Product"],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "ID of the product to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Route to get product by id",
        "tags": ["Product"],
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "6420426735b82d89abc3522c"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/account/deposit": {
      "post": {
        "summary": "Route to deposit in users account",
        "tags": ["Account"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "deposit object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "example": 20
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/account/reset": {
      "post": {
        "summary": "Route to  reset users account",
        "tags": ["Account"],
        "produces": ["application/json"],
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/product": {
      "get": {
        "summary": "Route to get all products",
        "tags": ["Product"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number of results to return (default 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Number of results to return per page (default 10)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },

      "post": {
        "summary": "Route to create product by seller",
        "tags": ["Product"],
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Product object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productName": {
                  "type": "string",
                  "example": "name"
                },
                "cost": {
                  "type": "number",
                  "example": 20
                },
                "description": {
                  "type": "string",
                  "example": "seller product"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Route to create user",
        "tags": ["User"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "lastName"
                },
                "username": {
                  "type": "string",
                  "example": "joy"
                },
                "role": {
                  "type": "string",
                  "example": "seller"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Route to  update users details  ",
        "tags": ["User"],
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "lastName"
                },
                "username": {
                  "type": "string",
                  "example": "joy"
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [{ "type": "bearer" }]
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "api to get user profile",
        "tags": ["User"],
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "api to get user profile"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/logout/all": {
      "post": {
        "summary": "Route to logout all user session with your email and password ",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "lastName"
                },
                "username": {
                  "type": "string",
                  "example": "joy"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Route to login user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "lastName"
                },
                "username": {
                  "type": "string",
                  "example": "joy"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}
